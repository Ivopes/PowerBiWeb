@using PowerBiWeb.Shared.Project;
<EditForm Model="@project" OnValidSubmit="@HandleAdd">
    <DataAnnotationsValidator />
    <div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Add Project</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="name">Name</label>
                        <InputText id="name" @bind-Value="project.Name" class="form-control"  />
                        <ValidationMessage For="@(() => project.Name)" />
                    </div>
                    <div class="form-group">
                        <label for="url">Metric project names</label>
                        <Tooltip Text="Name under which are metrics loaded from metric server (separate by ';' if multiple)">
                            <InputText id="url" @bind-Value="project.ConnectedMetricsIds" class="form-control" />
                        </Tooltip>
                        <ValidationMessage For="@(() => project.ConnectedMetricsIds)" />
                    </div>

                    <div class="form-group">
                        <label for="biName">Power BI prefix</label>
                            <Tooltip Text="Prefix under which is content loaded from Power BI">
                        <InputText id="biName" @bind-Value="project.PowerBiPrefix" class="form-control" />
                        </Tooltip>
                        <ValidationMessage For="@(() => project.PowerBiPrefix)" />
                    </div>

                    <div class="form-group">
                        <label class="form-check-label" for="downloadContent">Download already created content from PowerBI?</label>
                        <InputCheckbox id="downloadContent" @bind-Value="project.DownloadContent" class="form-check-input" />
                    </div>
                        
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary" data-toggle="tooltip" data-placement="top" title="Tooltip on top">
                        Add
                    </button>
                    <button type="button" class="btn btn-outline-secondary" @onclick=@Cancel>
                        Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter] public EventCallback<ProjectDTO?> OnClose { get; set; }
    private ProjectDTO project = new();
    private Task Cancel()
    {
        return OnClose.InvokeAsync(null);
    }
    private void HandleAdd()
    {
        OnClose.InvokeAsync(project);
    }
}