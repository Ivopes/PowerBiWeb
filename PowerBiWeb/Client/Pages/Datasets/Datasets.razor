@page "/datasets"
@using PowerBiWeb.Client.Utilities.Http;
@using PowerBiWeb.Client.Utilities.Interfaces;
@using PowerBiWeb.Shared.Datasets;
@inject IDatasetService _datasetService
@inject IToastService toastService

<h3 id="p">Datasets</h3>

<button type="button" class="btn btn-primary" @onclick="@ShowAddModal">Add</button>

@if (_datasets is null)
{
        <div>Loading...</div>  
}
else
{
        <div>
        @foreach (var d in _datasets)
        {
            string link = $"/datasets/{d.Id}"; 

                    <NavLink href=@link>
                        <span>@d.MetricFilesId</span>
                    </NavLink>
                    <br/>

        }
        </div>
}

<Modal @ref="modalAddRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Add dataset</ModalTitle>
            <CloseButton />
    </ModalHeader>
    <ModalBody>
            <div class="form-group">
                <label for="metricsId">Metric Id</label>
                <InputText id="metricsId" class="form-control" @bind-Value="addId" />
            </div>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideAddModal">Close</Button>
            <Button Color="Color.Primary" Clicked="@AddDataset">Add</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    private List<DatasetDTO>? _datasets = null;
    private Modal? modalAddRef;
    private string addId = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
    private async Task LoadData()
    {
        HttpResponse<List<DatasetDTO>> response = await _datasetService.GetAllAsync();

        if (response.IsSuccess)
        {
            _datasets = response.Value;

            toastService.ShowSuccess("Datasets loaded");
        }
        else
        {
            toastService.ShowError(response.ErrorMessage);
        }
    }
    private async Task AddDataset()
    {
        if (string.IsNullOrEmpty(addId) || string.IsNullOrWhiteSpace(addId))
        {
            toastService.ShowError("Please enter id");
            return;
        }

        HttpResponse<DatasetDTO> response = await _datasetService.AddDatasetAsync(addId);

        if (response.IsSuccess)
        {
            toastService.ShowSuccess("Dataset added");

            await LoadData();
        }
        else
        {
            toastService.ShowError(response.ErrorMessage);
        }
    }
    private async Task HideAddModal()
    {
        addId = string.Empty;
        await modalAddRef.Hide();
    }
    private async Task ShowAddModal()
    {
        await modalAddRef.Show();
    }
}
